/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexRoute } from './routes/index'
import { Route as ExploreRoute } from './routes/explore'
import { Route as HistoryRoute } from './routes/history'
import { Route as SettingsRoute } from './routes/settings'
import { Route as CreateAtomRoute } from './routes/create-atom'

// Create/Update Routes

const IndexRouteWithParent = IndexRoute.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ExploreRouteWithParent = ExploreRoute.update({
  path: '/explore',
  getParentRoute: () => rootRoute,
} as any)

const HistoryRouteWithParent = HistoryRoute.update({
  path: '/history',
  getParentRoute: () => rootRoute,
} as any)

const SettingsRouteWithParent = SettingsRoute.update({
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any)

const CreateAtomRouteWithParent = CreateAtomRoute.update({
  path: '/create-atom',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      parentRoute: typeof rootRoute
    }
    '/explore': {
      id: '/explore'
      path: '/explore'
      fullPath: '/explore'
      parentRoute: typeof rootRoute
    }
    '/history': {
      id: '/history'
      path: '/history'
      fullPath: '/history'
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      parentRoute: typeof rootRoute
    }
    '/create-atom': {
      id: '/create-atom'
      path: '/create-atom'
      fullPath: '/create-atom'
      parentRoute: typeof rootRoute
    }
    '/create-atom/': { // is this also necessary?
      id: '/create-atom/'
      path: '/'
      fullPath: '/create-atom/'
      parentRoute: typeof CreateAtomRouteWithParent
    }
  }
}

export const routeTree = rootRoute.addChildren([
  IndexRouteWithParent,
  ExploreRouteWithParent,
  HistoryRouteWithParent,
  SettingsRouteWithParent,
  CreateAtomRouteWithParent,
])

/* prettier-ignore-end **/ 