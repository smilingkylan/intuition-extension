/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexRoute } from './routes/index'
import { Route as ExploreRoute } from './routes/explore'
import { Route as HistoryRoute } from './x-com/history'
import { Route as SettingsRoute } from './routes/settings'
import { Route as CreateAtomRoute } from './routes/create-atom'
import { Route as CreateAtomIndexRoute } from './routes/create-atom/index'
import { Route as CreateAtomImageRoute } from './routes/create-atom/image'
import { Route as CreateAtomIdentityRoute } from './routes/create-atom/identity'
import { Route as CreateAtomReviewRoute } from './routes/create-atom/review'
import { Route as CreateAtomProcessRoute } from './routes/create-atom/process'
import { Route as CreateAtomSuccessRoute } from './routes/create-atom/success'

// Create/Update Routes

const IndexRouteWithParent = IndexRoute.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ExploreRouteWithParent = ExploreRoute.update({
  path: '/explore',
  getParentRoute: () => rootRoute,
} as any)

const HistoryRouteWithParent = HistoryRoute.update({
  path: '/history',
  getParentRoute: () => rootRoute,
} as any)

const SettingsRouteWithParent = SettingsRoute.update({
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any)

const CreateAtomRouteWithParent = CreateAtomRoute.update({
  path: '/create-atom',
  getParentRoute: () => rootRoute,
} as any)

const CreateAtomIndexRouteWithParent = CreateAtomIndexRoute.update({
  path: '/',
  getParentRoute: () => CreateAtomRouteWithParent,
} as any)

const CreateAtomImageRouteWithParent = CreateAtomImageRoute.update({
  path: '/image',
  getParentRoute: () => CreateAtomRouteWithParent,
} as any)

const CreateAtomIdentityRouteWithParent = CreateAtomIdentityRoute.update({
  path: '/identity',
  getParentRoute: () => CreateAtomRouteWithParent,
} as any)

const CreateAtomReviewRouteWithParent = CreateAtomReviewRoute.update({
  path: '/review',
  getParentRoute: () => CreateAtomRouteWithParent,
} as any)

const CreateAtomProcessRouteWithParent = CreateAtomProcessRoute.update({
  path: '/process',
  getParentRoute: () => CreateAtomRouteWithParent,
} as any)

const CreateAtomSuccessRouteWithParent = CreateAtomSuccessRoute.update({
  path: '/success',
  getParentRoute: () => CreateAtomRouteWithParent,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      parentRoute: typeof rootRoute
    }
    '/explore': {
      id: '/explore'
      path: '/explore'
      fullPath: '/explore'
      parentRoute: typeof rootRoute
    }
    '/history': {
      id: '/history'
      path: '/history'
      fullPath: '/history'
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      parentRoute: typeof rootRoute
    }
    '/create-atom': {
      id: '/create-atom'
      path: '/create-atom'
      fullPath: '/create-atom'
      parentRoute: typeof rootRoute
    }
    '/create-atom/': {
      id: '/create-atom/'
      path: '/'
      fullPath: '/create-atom/'
      parentRoute: typeof CreateAtomRouteWithParent
    }
    '/create-atom/image': {
      id: '/create-atom/image'
      path: '/image'
      fullPath: '/create-atom/image'
      parentRoute: typeof CreateAtomRouteWithParent
    }
    '/create-atom/identity': {
      id: '/create-atom/identity'
      path: '/identity'
      fullPath: '/create-atom/identity'
      parentRoute: typeof CreateAtomRouteWithParent
    }
    '/create-atom/review': {
      id: '/create-atom/review'
      path: '/review'
      fullPath: '/create-atom/review'
      parentRoute: typeof CreateAtomRouteWithParent
    }
    '/create-atom/process': {
      id: '/create-atom/process'
      path: '/process'
      fullPath: '/create-atom/process'
      parentRoute: typeof CreateAtomRouteWithParent
    }
    '/create-atom/success': {
      id: '/create-atom/success'
      path: '/success'
      fullPath: '/create-atom/success'
      parentRoute: typeof CreateAtomRouteWithParent
    }
  }
}

// Create and export the route tree

const createAtomRouteWithChildren = CreateAtomRouteWithParent.addChildren([
  CreateAtomIndexRouteWithParent,
  CreateAtomImageRouteWithParent,
  CreateAtomIdentityRouteWithParent,
  CreateAtomReviewRouteWithParent,
  CreateAtomProcessRouteWithParent,
  CreateAtomSuccessRouteWithParent,
])

export const routeTree = rootRoute.addChildren([
  IndexRouteWithParent,
  ExploreRouteWithParent,
  HistoryRouteWithParent,
  SettingsRouteWithParent,
  createAtomRouteWithChildren,
])

/* prettier-ignore-end **/ 